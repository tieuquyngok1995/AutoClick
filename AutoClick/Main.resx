<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAEBAQ8Cx0f8AsfIecHBwcjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAsYGtQporT/IoGP/wwhJLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAJCQkdCRcZ8zbc9f8xyeD/CBQW9wAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkNDXccaXX3N+D6/zXZ8v8SPUP7CAgIQQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRYY3C66z/845P3/Ntrz/yKDkv8LICOpAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHByYMHyLxOOT+/zjk/v823fb/Mcng/xpg
        a9IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBAQgx9zf/k45P7/OOT+/zfh
        +v812fL/Ntz07gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJFBXkMMLY/zjk
        /v845P7/OOT+/zXZ8/8sssb/ES4yhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFLw0l
        KfA45P7/OOT+/zjk/v845P7/Nt33/zHG3P8JFxn0AAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAHEBKOIXyJ+zjk/v845P7/OOT+/zjk/v834fr/Ndny/xE2O/sEBAQ5AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQkTFOoyyuH/OOT+/zjk/v845P7/OOT+/zjj/v834fr/IYCO/ggREsEFBQU3AAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAEBAQ5Dy4z7zjk/v845P7/OOT+/zjk/v845P7/OOT+/zjk/v823PX/IYCO/RAw
        NfEJEhPuChUXnggICEIAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgSFJojhZT9OOT+/zjk/v845P7/OOT+/zjk/v845P7/OOT+/zjk
        /v845P7/OOT+/zTS6v8lkqL+Ej5E8AgREvMKFxmvBgYGVQAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA4ICAhEBgYGUAAAAAAAAAADCRAS7zTQ6P845P7/OOT+/zjk/v845P7/OOT+/zjk
        /v845P7/OOT+/zjk/v845P7/OOT+/zjk/v845P7/NNXt/yWSov8TQUjwCBMW+Q0iJsEGBgYqAAAAAAAA
        AAAAAAAAAAAAAAcHByUGBgaiBgYG5gYGBq4FBQVkAAAAAAgICEIQNTzvOOT+/zjk/v845P7/OOT+/zjk
        /v845P7/OOT+/zjk/v845P7/OOT+/zjk/v845P7/OOT+/zjk/v845P7/OOT+/zfh+/8z0Oj/I4mZ/wse
        IegAAAAAAAAAAAAAAAAHBwdrBgYG4QUFBWQAAAAIAAAAAAAAAAAAAAAACRYXpiSPn/445P7/OOT+/zjk
        /v845P7/OOT+/zjk/v845P7/OOT+/zjk/v845P7/OOT+/zjk/v845P7/OOP9/zff+P822/X/Ndny/zTV
        7f8mlKX/Cxwe7QAAAAAAAAAABgYGfQYGBsgAAAAVAAAAAAcHB0UGBgaeCwsLGAAAAAYHEBHyNNXt/zjk
        /v845P7/OOT+/zjk/v845P7/OOT+/zjk/v845P7/OOT+/zjk/v844/3/Nt/4/zbc9f812fL/NNbv/ymj
        tf8ZWmT+CRYY+gwiJc8FBQU0AAAAAAcHB00GBgbRAAAADAAAABAGBgayBgYGxQYGBlQAAAACBwcHTBNA
        Ru845P7/OOT+/zjk/v845P7/OOT+/zjk/v845P7/OOT+/zjj/f834Pn/Ntz2/zXZ8v812fL/K6/D/xph
        a/8KGhz7DCMm4gkNDXIMDAwWAAAAAAAAAAAAAAAHBgYG4AYGBisAAAAJBgYGyAYGBn0AAAABAAAAAAAA
        AAAKFhewJpan/zjk/v845P7/OOT+/zjk/v845P7/OOT9/zfg+v823Pb/Ndny/zXZ8v8ttcr/HW98/gwh
        JPoMIybiCREUdQsLCxgAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBWEGBgajAAAAAAYGBoQHBweXAAAAAAAA
        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
        YGID/gAAkeMpAoiA///DiP//4EH///gD//8=
</value>
  </data>
</root>